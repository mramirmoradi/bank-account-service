package com.mobilab.mobilab.Transaction.Service;

import com.mobilab.mobilab.Account.Entity.Account;
import com.mobilab.mobilab.Base.Service.BaseServiceImp;
import com.mobilab.mobilab.Transaction.Entity.Transaction;
import com.mobilab.mobilab.Transaction.Enum.TransactionStatus;
import com.mobilab.mobilab.Transaction.Enum.TransactionType;
import com.mobilab.mobilab.Transaction.Repository.TransactionRepository;
import org.springframework.stereotype.Service;

import java.util.UUID;

/**
 * @author amirmoradi
 * @since 2022-12-03
 */
@Service
public class TransactionServiceImp extends BaseServiceImp<Transaction> implements TransactionService {

    private final TransactionRepository repository;

    public TransactionServiceImp(TransactionRepository repository) {
        super(repository);
        this.repository = repository;
    }

    /**
     * Submitting two transaction record, one for receiver, one for sender
     * Receiver amount will be saved by exchange rate affect
     * Tracking code will be generated by random UUID
     * Tracking code for both transaction record will be same
     * @param source as source Account.Class
     * @param destination as destination Account.Class
     * @param amount as amount of money without exchange operation
     * @param status as SUCCESS or FAILURE transaction
     * @param exchangeRate as exchange rate between two currency
     * @return String as tracking code
     */
    @Override
    public String submitTransaction(Account source, Account destination, double amount, TransactionStatus status, Double exchangeRate) {
        String trackingCode = UUID.randomUUID().toString();

        Transaction sourceTransaction = new Transaction(
                source.getNumber(),
                source.getNumber(),
                destination.getNumber(),
                amount,
                exchangeRate,
                source.getCurrency(),
                destination.getCurrency(),
                status,
                TransactionType.SENT,
                trackingCode
        );

        Transaction destinationTransaction = new Transaction(
                destination.getNumber(),
                source.getNumber(),
                destination.getNumber(),
                amount * exchangeRate,
                exchangeRate,
                source.getCurrency(),
                destination.getCurrency(),
                status,
                TransactionType.RECEIVED,
                trackingCode
        );

        create(sourceTransaction);
        create(destinationTransaction);

        return trackingCode;
    }
}
